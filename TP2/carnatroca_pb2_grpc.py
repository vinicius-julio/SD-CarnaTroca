# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import carnatroca_pb2 as carnatroca__pb2


class UnaryStub(object):
    """A simple RPC.

    Obtains the MessageResponse at a given position.
    rpc GetServerResponse(Message) returns (MessageResponse);
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.cadastraUser = channel.unary_unary(
                '/unary.Unary/cadastraUser',
                request_serializer=carnatroca__pb2.cadUserRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.cadUserResponse.FromString,
                )
        self.loginUser = channel.unary_unary(
                '/unary.Unary/loginUser',
                request_serializer=carnatroca__pb2.cadUserRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.cadUserResponse.FromString,
                )
        self.criaNovoAnuncio = channel.unary_unary(
                '/unary.Unary/criaNovoAnuncio',
                request_serializer=carnatroca__pb2.anuncioRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.anuncioResponse.FromString,
                )
        self.listaFantasia = channel.unary_unary(
                '/unary.Unary/listaFantasia',
                request_serializer=carnatroca__pb2.listaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.listaResponse.FromString,
                )
        self.listaMeusAnuncios = channel.unary_unary(
                '/unary.Unary/listaMeusAnuncios',
                request_serializer=carnatroca__pb2.listaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.listaResponse.FromString,
                )
        self.proporTroca = channel.unary_unary(
                '/unary.Unary/proporTroca',
                request_serializer=carnatroca__pb2.trocaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.trocaResponse.FromString,
                )
        self.listaTroca = channel.unary_unary(
                '/unary.Unary/listaTroca',
                request_serializer=carnatroca__pb2.listaTrocaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.listaTrocaResponse.FromString,
                )
        self.aceitaTroca = channel.unary_unary(
                '/unary.Unary/aceitaTroca',
                request_serializer=carnatroca__pb2.finalizaTrocaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.finalizaTrocaResponse.FromString,
                )
        self.recusaTroca = channel.unary_unary(
                '/unary.Unary/recusaTroca',
                request_serializer=carnatroca__pb2.finalizaTrocaRequest.SerializeToString,
                response_deserializer=carnatroca__pb2.finalizaTrocaResponse.FromString,
                )


class UnaryServicer(object):
    """A simple RPC.

    Obtains the MessageResponse at a given position.
    rpc GetServerResponse(Message) returns (MessageResponse);
    """

    def cadastraUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def criaNovoAnuncio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listaFantasia(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listaMeusAnuncios(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def proporTroca(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listaTroca(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def aceitaTroca(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def recusaTroca(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UnaryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'cadastraUser': grpc.unary_unary_rpc_method_handler(
                    servicer.cadastraUser,
                    request_deserializer=carnatroca__pb2.cadUserRequest.FromString,
                    response_serializer=carnatroca__pb2.cadUserResponse.SerializeToString,
            ),
            'loginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.loginUser,
                    request_deserializer=carnatroca__pb2.cadUserRequest.FromString,
                    response_serializer=carnatroca__pb2.cadUserResponse.SerializeToString,
            ),
            'criaNovoAnuncio': grpc.unary_unary_rpc_method_handler(
                    servicer.criaNovoAnuncio,
                    request_deserializer=carnatroca__pb2.anuncioRequest.FromString,
                    response_serializer=carnatroca__pb2.anuncioResponse.SerializeToString,
            ),
            'listaFantasia': grpc.unary_unary_rpc_method_handler(
                    servicer.listaFantasia,
                    request_deserializer=carnatroca__pb2.listaRequest.FromString,
                    response_serializer=carnatroca__pb2.listaResponse.SerializeToString,
            ),
            'listaMeusAnuncios': grpc.unary_unary_rpc_method_handler(
                    servicer.listaMeusAnuncios,
                    request_deserializer=carnatroca__pb2.listaRequest.FromString,
                    response_serializer=carnatroca__pb2.listaResponse.SerializeToString,
            ),
            'proporTroca': grpc.unary_unary_rpc_method_handler(
                    servicer.proporTroca,
                    request_deserializer=carnatroca__pb2.trocaRequest.FromString,
                    response_serializer=carnatroca__pb2.trocaResponse.SerializeToString,
            ),
            'listaTroca': grpc.unary_unary_rpc_method_handler(
                    servicer.listaTroca,
                    request_deserializer=carnatroca__pb2.listaTrocaRequest.FromString,
                    response_serializer=carnatroca__pb2.listaTrocaResponse.SerializeToString,
            ),
            'aceitaTroca': grpc.unary_unary_rpc_method_handler(
                    servicer.aceitaTroca,
                    request_deserializer=carnatroca__pb2.finalizaTrocaRequest.FromString,
                    response_serializer=carnatroca__pb2.finalizaTrocaResponse.SerializeToString,
            ),
            'recusaTroca': grpc.unary_unary_rpc_method_handler(
                    servicer.recusaTroca,
                    request_deserializer=carnatroca__pb2.finalizaTrocaRequest.FromString,
                    response_serializer=carnatroca__pb2.finalizaTrocaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unary.Unary', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Unary(object):
    """A simple RPC.

    Obtains the MessageResponse at a given position.
    rpc GetServerResponse(Message) returns (MessageResponse);
    """

    @staticmethod
    def cadastraUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/cadastraUser',
            carnatroca__pb2.cadUserRequest.SerializeToString,
            carnatroca__pb2.cadUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def loginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/loginUser',
            carnatroca__pb2.cadUserRequest.SerializeToString,
            carnatroca__pb2.cadUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def criaNovoAnuncio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/criaNovoAnuncio',
            carnatroca__pb2.anuncioRequest.SerializeToString,
            carnatroca__pb2.anuncioResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listaFantasia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/listaFantasia',
            carnatroca__pb2.listaRequest.SerializeToString,
            carnatroca__pb2.listaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listaMeusAnuncios(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/listaMeusAnuncios',
            carnatroca__pb2.listaRequest.SerializeToString,
            carnatroca__pb2.listaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def proporTroca(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/proporTroca',
            carnatroca__pb2.trocaRequest.SerializeToString,
            carnatroca__pb2.trocaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listaTroca(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/listaTroca',
            carnatroca__pb2.listaTrocaRequest.SerializeToString,
            carnatroca__pb2.listaTrocaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def aceitaTroca(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/aceitaTroca',
            carnatroca__pb2.finalizaTrocaRequest.SerializeToString,
            carnatroca__pb2.finalizaTrocaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def recusaTroca(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/unary.Unary/recusaTroca',
            carnatroca__pb2.finalizaTrocaRequest.SerializeToString,
            carnatroca__pb2.finalizaTrocaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
